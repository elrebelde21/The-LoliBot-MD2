const handler = async (m, {conn, text, usedPrefix, command}) => {
global.db.data.sticker = global.db.data.sticker || {};
  
if (command == 'addcmd' || command == 'setcmd') {  
if (!m.quoted) throw '‚ö†Ô∏è  Ä·¥ás·¥ò·¥è…¥·¥Ö·¥á ·¥Ä ü ·¥ú…¥ s·¥õ…™·¥Ñ·¥ã·¥á Ä ·¥è …™·¥ç·¥Ä…¢·¥á…¥ ·¥Ä ü ·¥Ñ·¥ú·¥Ä ü ·¥Ö·¥ás·¥á·¥Ä ·¥Ä…¢ Ä·¥á…¢·¥Ä Ä ·¥ú…¥ ·¥Ñ·¥è·¥ç·¥Ä…¥·¥Ö·¥è ·¥è ·¥õ·¥áx·¥õ·¥è';
if (!m.quoted.fileSha256) throw '‚ö†Ô∏è s·¥è ü·¥è ·¥ò·¥ú·¥á·¥Ö·¥ás ·¥Äs…™…¢…¥·¥Ä Ä·¥Ä Ä ·¥Ñ·¥è·¥ç·¥Ä…¥·¥Ö·¥ès ·¥è ·¥õ·¥áx·¥õ·¥ès ·¥Ä s·¥õ…™·¥Ñ·¥ã·¥á Ä ·¥á …™·¥ç·¥Ä…¢·¥á…¥*';
if (!text) throw `*‚ö†Ô∏è  Ä·¥ás·¥ò·¥è…¥·¥Ö·¥á ·¥Ä ü ·¥ú…¥ s·¥õ…™·¥Ñ·¥ã·¥á Ä ·¥è …™·¥ç·¥Ä…¢ Ä…¥ ·¥Ä ü ·¥Ñ·¥ú·¥Ä ü ·¥Ö·¥ás·¥á·¥Ä ·¥Ä…¢ Ä·¥á…¢·¥Ä Ä ·¥ú…¥ ·¥Ñ·¥è·¥ç·¥Ä…¥·¥Ö·¥è ·¥è ·¥õ·¥áx·¥õ·¥è*\n*‚Ä¢ ·¥á·¥ä·¥á·¥ç·¥ò ü·¥è:* ${usedPrefix + command} <texto> <responder a sticker o imagen`;
const sticker = global.db.data.sticker;
const hash = m.quoted.fileSha256.toString('base64');
if (sticker[hash] && sticker[hash].locked) throw '‚ö†Ô∏è ·¥õ·¥ú ·¥èÃ®·¥ú…™·¥á…¥ ·¥Ñ·¥Ä Ä·¥Ä·¥ä·¥è ·¥á Ä·¥ás? üßê, s·¥è ü·¥è ·¥ç…™ ·¥ä·¥á“ì·¥á ·¥ò·¥ú·¥á·¥Ö·¥á ·¥ús·¥Ä Ä ·¥ás·¥õ·¥á ·¥Ñ·¥è·¥ç·¥Ä…¥·¥Ö·¥è*';
sticker[hash] = {text, mentionedJid: m.mentionedJid, creator: m.sender, at: + new Date, locked: false};
m.reply(`*‚úÖ ·¥á ü ·¥õ·¥áx·¥õ·¥è/·¥Ñ·¥è·¥ç·¥Ä…¥·¥Ö·¥è ·¥Äs…™…¢…¥·¥Ä·¥Ö·¥è ·¥Ä ü s·¥õ…™·¥Ñ·¥ã·¥á Ä/…™·¥ç·¥Ä…¢·¥á…¥ “ì·¥ú·¥á ·¥Ä…¢ Ä·¥á…¢·¥Ä·¥Ö·¥è ·¥Ä  ü·¥Ä  ô·¥Äs·¥á ·¥Ö·¥á ·¥Ö·¥Ä·¥õ·¥ès ·¥Ñ·¥è Ä Ä·¥á·¥Ñ·¥õ·¥Ä·¥ç·¥á…¥·¥õ·¥á*`);
m.react("‚úÖ") 
};

if (command == 'delcmd') {  
let hash = text;
if (m.quoted && m.quoted.fileSha256) hash = m.quoted.fileSha256.toString('hex');
if (!hash) throw `*[‚ùóùêàùêçùêÖùêé‚ùó] ùöÇùôæùôªùôæ ùöÇùô¥ ùôøùöÑùô¥ùô≥ùô¥ùôΩ ùô∞ùöÇùô∏ùô∂ùôΩùô∞ùöÅ ùöÉùô¥ùöáùöÉùôæùöÇ ùôæ ùô≤ùôæùôºùô∞ùôΩùô≥ùôæùöÇ ùô∞ùöÇùô∏ùô∂ùôΩùô∞ùô≥ùôæùöÇ ùô∞ ùöÇùöÉùô∏ùô≤ùô∫ùô¥ùöÅùöÇ ùôæ ùô∏ùôºùô∞ùô∂ùô¥ùôΩùô¥ùöÇ, ùôøùô∞ùöÅùô∞ ùôæùô±ùöÉùô¥ùôΩùô¥ùöÅ ùô¥ùôª ùô≤ùôæùô≥ùô∏ùô∂ùôæ ùô∞ùöÇùô∏ùô∂ùôΩùô∞ùô≥ùôæ ùöÑùöÇùô¥ ùô¥ùôª ùô≤ùôæùôºùô∞ùôΩùô≥ùôæ ${usedPrefix}listcmd*`;
  const sticker = global.db.data.sticker;
if (sticker[hash] && sticker[hash].locked) throw '‚ö†Ô∏è ·¥õ·¥ú ·¥èÃ®·¥ú…™·¥á…¥ ·¥Ñ·¥Ä Ä·¥Ä·¥ä·¥è ·¥á Ä·¥ás? üßê, s·¥è ü·¥è ·¥ç…™ ·¥ä·¥á“ì·¥á ·¥ò·¥ú·¥á·¥Ö·¥á ·¥ús·¥Ä Ä ·¥ás·¥õ·¥á ·¥Ñ·¥è·¥ç·¥Ä…¥·¥Ö·¥è*';
delete sticker[hash];
m.reply(`*‚úÖ ·¥á ü ·¥õ·¥áx·¥õ·¥è/·¥Ñ·¥è·¥ç·¥Ä…¥·¥Ö·¥è ·¥Äs…™…¢…¥·¥Ä·¥Ö·¥è ·¥Ä ü s·¥õ…™·¥Ñ·¥ã·¥á Ä/…™·¥ç·¥Ä…¢·¥á…¥ “ì·¥ú·¥á ·¥á ü…™·¥ç…™…¥·¥Ä·¥Ö·¥è ·¥Ö·¥á  ü·¥Ä  ô·¥Äs·¥á ·¥Ö·¥á ·¥Ö·¥Ä·¥õ·¥ès ·¥Ñ·¥è Ä Ä·¥á·¥Ñ·¥õ·¥Ä·¥ç·¥á…¥·¥õ·¥á*`);
}

if (command == 'listcmd' || command == 'cmdlist') {  
conn.reply(m.chat, `*< ùòìùòêùòöùòõùòà ùòãùòå ùòäùòñùòîùòàùòïùòãùòñùòö / ùòõùòåùòüùòõùòñùòö ùòàùòöùòêùòéùòàùòïùòãùòñùòö />*

${Object.entries(global.db.data.sticker).map(([key, value], index) => `*${index + 1}.-*\n*·¥Ñ·¥è·¥Ö…™…¢·¥è:* ${value.locked ? `_*( ô ü·¥è«´·¥ú·¥á·¥Ä·¥Ö·¥è)*_ ${key}` : key}\n*·¥Ñ·¥è·¥ç·¥Ä…¥·¥Ö·¥è/·¥õ·¥áx·¥õ·¥è:* ${value.text}`).join('\n\n')}
`.trim(), null, {mentions: Object.values(global.db.data.sticker).map((x) => x.mentionedJid).reduce((a, b) => [...a, ...b], [])});
}}
handler.help = ['addcmd', 'delcmd', 'listcmd']
handler.tags = ['owner']
handler.command = ['setcmd', 'addcmd', 'cmdadd', 'cmdset', 'delcmd', 'listcmd', 'cmdlist'];
handler.owner = true;
export default handler;
